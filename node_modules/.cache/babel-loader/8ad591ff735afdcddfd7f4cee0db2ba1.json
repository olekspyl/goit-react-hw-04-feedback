{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\Feedback\\\\Feedback.js\";\nimport { Component } from \"react\";\nimport { Container, Button } from \"../App.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = total => {\n      return {\n        total: this.state.good + this.state.neutral + this.state.bad\n      };\n    };\n\n    this.handleClickGood = () => {\n      this.setState(prevState => {\n        return {\n          good: prevState.good + 1\n        };\n      });\n    };\n\n    this.handleClickNeutral = () => {\n      this.setState(prevState => {\n        return {\n          neutral: prevState.neutral + 1\n        };\n      });\n    };\n\n    this.handleClickBad = () => {\n      this.setState(prevState => {\n        return {\n          bad: prevState.bad + 1\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: this.handleClickGood,\n        children: \"Good \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: this.handleClickNeutral,\n        children: \"Neutral \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: this.handleClickBad,\n        children: \"Bad \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Good: \", this.state.good]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Neutral: \", this.state.neutral]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bad: \", this.state.bad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total:\", this.countTotalFeedback.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Positive feedback: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/GitHub/goit-react-hw-02-feedback/src/components/Feedback/Feedback.js"],"names":["Component","Container","Button","Feedback","state","good","neutral","bad","countTotalFeedback","total","handleClickGood","setState","prevState","handleClickNeutral","handleClickBad","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAiC,eAAjC;;AAGA,OAAO,MAAMC,QAAN,SAAuBH,SAAvB,CAAkC;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAF+B;;AAAA,SAQrCC,kBARqC,GAQfC,KAAD,IAAW;AAC5B,aAAO;AACXA,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG;AAD9C,OAAP;AAIL,KAbsC;;AAAA,SAevCG,eAfuC,GAerB,MAAM;AACtB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLP,UAAAA,IAAI,EAAEO,SAAS,CAACP,IAAV,GAAiB;AADlB,SAAP;AAGD,OAJD;AAKD,KArBsC;;AAAA,SAuBvCQ,kBAvBuC,GAuBlB,MAAM;AACzB,WAAKF,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLN,UAAAA,OAAO,EAAEM,SAAS,CAACN,OAAV,GAAoB;AADxB,SAAP;AAGD,OAJD;AAKD,KA7BsC;;AAAA,SA+BvCQ,cA/BuC,GA+BtB,MAAM;AACrB,WAAKH,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLL,UAAAA,GAAG,EAAEK,SAAS,CAACL,GAAV,GAAgB;AADhB,SAAP;AAGD,OAJD;AAMH,KAtCwC;AAAA;;AAwCvCQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKL,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKG,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEA;AAAA,+BAAU,KAAKV,KAAL,CAAWC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,kCAAa,KAAKD,KAAL,CAAWE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIE;AAAA,8BAAS,KAAKF,KAAL,CAAWG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKQ;AAAA,+BAAU,KAAKC,kBAAL,CAAwBC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBALR,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzDsC","sourcesContent":["import { Component } from \"react\";\r\nimport { Container, Button} from \"../App.styled\";\r\n\r\n\r\nexport class Feedback extends Component  {\r\n  \r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  }\r\n\r\n    countTotalFeedback = (total) => {\r\n        return {\r\n    total: this.state.good + this.state.neutral + this.state.bad,\r\n        }\r\n      \r\n  }\r\n    \r\n  handleClickGood = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        good: prevState.good + 1,\r\n      }\r\n    })\r\n  }\r\n  \r\n  handleClickNeutral = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        neutral: prevState.neutral + 1,\r\n      }\r\n    })\r\n  }\r\n  \r\n  handleClickBad = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        bad: prevState.bad + 1,\r\n      }\r\n    })\r\n  \r\n}\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>Please leave feedback</h1>\r\n        <Button type=\"button\" onClick={this.handleClickGood}>Good </Button>\r\n        <Button type=\"button\" onClick={this.handleClickNeutral}>Neutral </Button>\r\n        <Button type=\"button\" onClick={this.handleClickBad}>Bad </Button>\r\n        <div>\r\n            <h2>Statistics</h2>\r\n        <p>Good: {this.state.good}</p>\r\n        <p>Neutral: {this.state.neutral}</p>\r\n          <p>Bad: {this.state.bad}</p>\r\n                <p>Total:{this.countTotalFeedback.total}</p>\r\n          <p>Positive feedback: </p>\r\n            </div>\r\n      </Container>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}