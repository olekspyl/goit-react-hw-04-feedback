{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport FeedbackOptions from \"./Feedback/FeedbackOptions\";\nimport Statistics from \"./Feedback/Statistics\";\nimport Section from \"./Feedback/Section\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      const total = Object.values(this.state);\n      return total.reduce((acc, value) => acc + value, 0);\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Number.parseInt(this.state.good > 0 ? this.state.good / this.countTotalFeedback() * 100 : 0);\n    };\n\n    this.onLeaveFeedback = option => {\n      this.setState(prevState => ({\n        [option]: prevState[option] + 1\n      }));\n    };\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        chidlren: true,\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          onLeaveFeedback: this.onLeaveFeedback,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        chidlren: true,\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: this.state.good,\n          neutral: this.state.neutral,\n          bad: this.state.bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Section","App","state","good","neutral","bad","countTotalFeedback","total","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Number","parseInt","onLeaveFeedback","option","setState","prevState","render","options","keys","positivePercentage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAGE,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAElB;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,GAAG,EAAE;AAHD,KAFkB;;AAAA,SAQ1BC,kBAR0B,GAQL,MAAM;AACzB,YAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKP,KAAnB,CAAd;AACA,aAAOK,KAAK,CAACG,MAAN,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAnC,EAA0C,CAA1C,CAAP;AACD,KAXyB;;AAAA,SAa1BC,+BAb0B,GAaQ,MAAM;AACvC,aAAOC,MAAM,CAACC,QAAP,CACN,KAAKb,KAAL,CAAWC,IAAX,GAAkB,CAAlB,GAAuB,KAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKG,kBAAL,EAAnB,GAAgD,GAAtE,GAA4E,CADtE,CAAP;AAEA,KAhByB;;AAAA,SAkB9BU,eAlB8B,GAkBZC,MAAM,IAAI;AACxB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACF,MAAD,GAAUE,SAAS,CAACF,MAAD,CAAT,GAAoB;AADJ,OAAL,CAAvB;AAGD,KAtB2B;AAAA;;AAwB1BG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAGb,MAAM,CAACc,IAAP,CAAY,KAAKpB,KAAjB,CAAhB;AACA,UAAMK,KAAK,GAAG,KAAKD,kBAAL,EAAd;AACA,UAAMiB,kBAAkB,GAAG,KAAKV,+BAAL,EAA3B;AAEF,wBAEE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAuC,QAAA,QAAQ,MAA/C;AAAA,+BACA,QAAC,eAAD;AACI,UAAA,eAAe,EAAE,KAAKG,eAD1B;AAEI,UAAA,OAAO,EAAEK;AAFb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAA4B,QAAA,QAAQ,MAApC;AAAA,+BACA,QAAC,UAAD;AACE,UAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,UAAA,KAAK,EAAEE,KAJT;AAKI,UAAA,kBAAkB,EAAEgB;AALxB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAmBD;;AAhD2B;;AAmD9B,eAAetB,GAAf","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport FeedbackOptions from \"./Feedback/FeedbackOptions\";\r\nimport Statistics from \"./Feedback/Statistics\";\r\nimport Section from \"./Feedback/Section\";\r\n\r\n\r\n  class App extends Component {\r\n  \r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n    } \r\n\r\n    countTotalFeedback = () => {\r\n      const total = Object.values(this.state);\r\n      return total.reduce((acc, value) => acc + value, 0);\r\n    }\r\n    \r\n    countPositiveFeedbackPercentage = () => {\r\n     return Number.parseInt(\r\n      this.state.good > 0 ? (this.state.good / this.countTotalFeedback()) * 100 : 0);\r\n    }\r\n\r\nonLeaveFeedback = option => {\r\n    this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n    render() {\r\n      const options = Object.keys(this.state);\r\n      const total = this.countTotalFeedback();\r\n      const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n\r\n      <div>\r\n        <Section title=\"Please leave feedback\" chidlren>\r\n        <FeedbackOptions\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n            options={options}\r\n         />\r\n        </Section>\r\n        <Section title=\"Statistics\" chidlren>\r\n        <Statistics\r\n          good={this.state.good }\r\n          neutral={this.state.neutral }\r\n          bad={this.state.bad }\r\n          total={total}\r\n            positivePercentage={positivePercentage} />\r\n          </Section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}